#!/bin/bash
set -eu

gv=$GO_V
rv=$ROCKSDB_V

CIRCLE_BRANCH=${CIRCLE_BRANCH/\//-} # fix/sth => fix-sth
tagName=(${CIRCLE_BRANCH/-/ }) # release-1 => release
SUFFIX="-beta"
if [ $tagName == "release" ]; then
  SUFFIX=""
fi
imageName=$CONTAINER_NAME:v$rv-go${gv}$SUFFIX

vt=v${gv}${SUFFIX}
# echo "Configuring FROM in Dockerfile with version=${vt}"
#Â sed "s~^\(FROM quay.io/redsift/sandbox-go:\).*$~\1${vt}~" < Dockerfile > Dockerfile.versioned

echo Building $imageName
docker build --build-arg ROCKSDB_VERSION=$rv -t $imageName -f ./Dockerfile .


MinorV=$(echo $rv | sed "s/\(.*\)\.\(.*\)\..*/\1.\2/")
MinorV_TAG=$CONTAINER_NAME:v$MinorV-go${gv}$SUFFIX
echo "Tagging as $MinorV_TAG"
docker tag $imageName $MinorV_TAG

# MAJOR_VERSION=(${rv//./ })
# MV_TAG=$CONTAINER_NAME:v$MAJOR_VERSION$SUFFIX
# echo "Tagging as $MV_TAG"
# docker tag $imageName $MV_TAG

if [[ "$tagName" == "release" ]]; then
  echo "Tagging as $CONTAINER_NAME:latest"
  # docker tag $imageName $CONTAINER_NAME:latest
fi

echo "Testing if /usr/local/lib is populated"
docker run $imageName -c "ls -l /usr/local/lib"

echo "Testing Go is installed"
docker run $imageName -c "go version"

